package com.hotel.pojo;

import java.io.Serializable;

public class Account implements Serializable {
	
	private static final long serialVersionUID = 1L;

	private int accountId; // automatically generated by the database to uniquely identify this account
	
	private String username; // username used to log in
	private String password; // password used to log in
	
	private String fullName; // user's full name
	private String fullAddress; // user's full address
	
	private String email; // user's email
	private String phoneNumber; // user's phone number
	
	public Account() {
		super();
	}
	
	public Account(String username, String password, String firstname, String middlename,
			String lastname, String street, String city, String state, String zipcode, 
			String email, String phoneNumber) {
		
		super();
		
		this.username = username;
		this.password = password;
		
		setFullName(firstname, middlename, lastname);
		
		setFullAddress(street, city, state, zipcode);
		
		this.email = email;
		this.phoneNumber = phoneNumber;
		
	}

	public int getAccountId() {
		return accountId;
	}

	public void setAccountId(int accountId) {
		this.accountId = accountId;
	}

	public String getUsername() {
		return username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	public String getPassword() {
		return password;
	}

	public void setPassword(String password) {
		this.password = password;
	}
	
	public String getFullName() {
		return fullName;
	}
	
	public void setFullName(String fullName) {
		this.fullName = fullName;
	}

	public void setFullName(String firstname, String middlename, String lastname) {
		/**
		 * Sets the full name of an account user with the given first name, middle name, and last name.
		 * Saves the full name in the private String fullName.
		 * After doing this, it sets the separate private Strings firstname, middlename, and lastname
		 * with the given first name, middle name, and last name.
		 * 
		 * @param firstname		the account user's first name
		 * @param middlename	the account user's middle name
		 * @param lastname		the account user's last name
		 * 
		 */
		
		if (middlename.equals("")) { // user doesn't have a middle name
			this.fullName = firstname + " " + lastname;
		}
		else { // user has a middle name
			this.fullName = firstname + " " + middlename + " " + lastname;
		}
		
	}
	
	public void setFullAddress(String fullAddress) {
		this.fullAddress = fullAddress;
	}
	
	public String getFullAddress() {
		return fullAddress;
	}
	
	public void setFullAddress(String street, String city, String state, String zipcode) {
		/**
		 * Sets the account user's full address.
		 * Saves the full address in the private String fullAddress, and then saves each
		 * piece of the address in their respective private String variables.
		 * 
		 * @param street	the given street
		 * @param city		the given city
		 * @param state		the given state
		 * @param zipcode	the given zip code
		 */
		
		this.fullAddress = street + " " + city + " " + state + " " + zipcode;
		
	}

	public String getEmail() {
		return email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	public String getPhoneNumber() {
		return phoneNumber;
	}

	public void setPhoneNumber(String phoneNumber) {
		this.phoneNumber = phoneNumber;
	}
	
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + accountId;
		result = prime * result + ((email == null) ? 0 : email.hashCode());
		result = prime * result + ((fullAddress == null) ? 0 : fullAddress.hashCode());
		result = prime * result + ((fullName == null) ? 0 : fullName.hashCode());
		result = prime * result + ((password == null) ? 0 : password.hashCode());
		result = prime * result + ((phoneNumber == null) ? 0 : phoneNumber.hashCode());
		result = prime * result + ((username == null) ? 0 : username.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Account other = (Account) obj;
		if (accountId != other.accountId)
			return false;
		if (email == null) {
			if (other.email != null)
				return false;
		} else if (!email.equals(other.email))
			return false;
		if (fullAddress == null) {
			if (other.fullAddress != null)
				return false;
		} else if (!fullAddress.equals(other.fullAddress))
			return false;
		if (fullName == null) {
			if (other.fullName != null)
				return false;
		} else if (!fullName.equals(other.fullName))
			return false;
		if (password == null) {
			if (other.password != null)
				return false;
		} else if (!password.equals(other.password))
			return false;
		if (phoneNumber == null) {
			if (other.phoneNumber != null)
				return false;
		} else if (!phoneNumber.equals(other.phoneNumber))
			return false;
		if (username == null) {
			if (other.username != null)
				return false;
		} else if (!username.equals(other.username))
			return false;
		return true;
	}

	@Override
	public String toString() {
		return "Account [accountId=" + accountId + ", username=" + username + ", password=" + password + ", fullName="
				+ fullName + ", fullAddress=" + fullAddress + ", email=" + email + ", phoneNumber=" + phoneNumber + "]";
	}
	
}